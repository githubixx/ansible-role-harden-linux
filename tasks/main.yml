- name: Load required variables based on the OS type
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_release }}.yml"
    - "{{ ansible_distribution|lower }}.yml"
    - "{{ ansible_os_family|lower }}.yml"

- name: OS specific setup
  include_tasks:
    file: "{{ item }}"
    apply:
      tags:
        - install
  with_first_found:
    - "setup-{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
    - "setup-{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
    - "setup-{{ ansible_distribution|lower }}-{{ ansible_distribution_release }}.yml"
    - "setup-{{ ansible_distribution|lower }}.yml"
    - "setup-{{ ansible_os_family|lower }}.yml"
  tags:
    - install

- name: "({{ ansible_distribution }}) Install required packages"
  package:
    pkg: "{{ harden_linux_required_packages }}"
    state: present
  retries: 2
  delay: 5
  tags:
    - ufw
    - install

- name: Delete root pw file /root/.pw (if present)
  file:
    path: "{{ file_to_delete }}"
    state: absent
  loop: "{{ harden_linux_files_to_delete }}"
  loop_control:
    loop_var: file_to_delete

- name: Setup NTP related services
  include_tasks:
    file: "ntp_{{ harden_linux_ntp }}.yml"
    apply:
      tags:
        - ntpd
  when:
    - harden_linux_ntp is defined
  tags:
    - ntpd

- name: Add deploy user
  user:
    name: "{{ harden_linux_deploy_user }}"
    password: "{{ harden_linux_deploy_user_password }}"
    uid: "{{ harden_linux_deploy_user_uid }}"
    shell: "{{ harden_linux_deploy_user_shell }}"
    home: "{{ harden_linux_deploy_user_home }}"
  tags:
    - user

- name: Add authorized keys for deploy user
  authorized_key:
    user: "{{ harden_linux_deploy_user }}"
    key: "{{ lookup('file', item) }}"
  with_items:
    - "{{ harden_linux_deploy_user_public_keys }}"
  when: harden_linux_deploy_user_public_keys is defined
  tags:
    - user

- name: Add deploy user to sudoers
  lineinfile:
    dest: /etc/sudoers
    regexp: "{{ harden_linux_deploy_user }} ALL"
    line: "{{ harden_linux_deploy_user }} ALL=(ALL) NOPASSWD:ALL"
    state: present
  tags:
    - user
    - sudo

- name: Combine harden_linux_sshd_settings and harden_linux_sshd_settings_user (if defined)
  set_fact:
    harden_linux_sshd_settings: "{{ harden_linux_sshd_settings | combine(harden_linux_sshd_settings_user|default({})) }}"
  tags:
    - ssh

- name: Ensure sshd_config setting
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    regexp: "{{ item }}"
    line: "{{ harden_linux_sshd_settings[item] }}"
    state: "present"
  notify: "restart ssh"
  with_items:
    - "{{ harden_linux_sshd_settings | list }}"
  tags:
    - ssh

- name: Combine harden_linux_sysctl_settings and harden_linux_sysctl_settings_user (if defined)
  set_fact:
    harden_linux_sysctl_settings: "{{ harden_linux_sysctl_settings | combine(harden_linux_sysctl_settings_user|default({})) }}"
  tags:
    - sysctl

- name: Sysctl settings
  sysctl:
    name: "{{ item }}"
    value: "{{ harden_linux_sysctl_settings[item] }}"
    sysctl_set: true
  with_items:
    - "{{ harden_linux_sysctl_settings | list }}"
  tags:
    - sysctl

- name: Combine harden_linux_ufw_defaults and harden_linux_ufw_defaults_user (if defined)
  set_fact:
    harden_linux_ufw_defaults: "{{ harden_linux_ufw_defaults | combine(harden_linux_ufw_defaults_user|default({})) }}"
  tags:
    - ufw

- name: UFW - Configure defaults
  lineinfile:
    dest: /etc/default/ufw
    regexp: "{{ item }}"
    line: "{{ harden_linux_ufw_defaults[item] }}"
    state: present
  notify: "reload ufw"
  with_items:
    - "{{ harden_linux_ufw_defaults | list }}"
  tags:
    - ufw

- name: UFW - Apply firewall rules
  ufw:
    rule: "{{ item.rule }}"
    interface: "{{ item.interface | default('') }}"
    direction: "{{ item.direction | default('in') }}"
    from_ip: "{{ item.from_ip | default('any') }}"
    to_ip: "{{ item.to_ip | default('any') }}"
    from_port: "{{ item.from_port | default('') }}"
    to_port: "{{ item.to_port | default('') }}"
    protocol: "{{ item.protocol | default('any') }}"
    log: "{{ item.log | default(False) }}"
  with_items: "{{ harden_linux_ufw_rules }}"
  tags:
    - ufw
    - ufwrules

- name: UFW - Allow configured networks to communicate
  ufw:
    rule: allow
    src: "{{ item }}"
  with_items:
    - "{{ harden_linux_ufw_allow_networks }}"
  when: harden_linux_ufw_allow_networks is defined
  tags:
    - ufw

- name: UFW - Setup logging
  ufw:
    logging: "{{ harden_linux_ufw_logging }}"
  tags:
    - ufw

- name: Setup sshguard
  include_tasks:
    file: "sshguard.yml"
    apply:
      tags:
        - sshguard
  tags:
    - sshguard

- name: UFW - Enable firewall/iptables
  ufw:
    state: enabled
  tags:
    - ufw

- name: Change root password
  user:
    name: "root"
    password: "{{ harden_linux_root_password }}"
  when: harden_linux_root_password is defined
  tags:
    - user
