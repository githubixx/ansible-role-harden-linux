---
- name: Install UFW package
  ansible.builtin.package:
    name: ufw
    state: present
  tags:
    - ufw

- name: Combine harden_linux_ufw_defaults and harden_linux_ufw_defaults_user (if defined)
  ansible.builtin.set_fact:
    harden_linux_ufw_defaults: "{{ harden_linux_ufw_defaults | combine(harden_linux_ufw_defaults_user | default({})) }}"
  tags:
    - ufw

- name: UFW - Configure defaults
  ansible.builtin.lineinfile:
    dest: /etc/default/ufw
    regexp: "{{ item }}"
    line: "{{ harden_linux_ufw_defaults[item] }}"
    state: present
  notify: "Reload ufw"
  loop: "{{ harden_linux_ufw_defaults | flatten }}"
  tags:
    - ufw

- name: UFW - Apply firewall rules
  ansible.builtin.ufw:
    rule: "{{ item.rule }}"
    interface: "{{ item.interface | default('') }}"
    direction: "{{ item.direction | default('in') }}"
    from_ip: "{{ item.from_ip | default('any') }}"
    to_ip: "{{ item.to_ip | default('any') }}"
    from_port: "{{ item.from_port | default('') }}"
    to_port: "{{ item.to_port | default('') }}"
    protocol: "{{ item.protocol | default('any') }}"
    log: "{{ item.log | default(False) }}"
    delete: "{{ item.delete | default(False) }}"
  notify: "Reload ufw"
  loop: "{{ harden_linux_ufw_rules }}"
  loop_control:
    pause: 1
  tags:
    - ufw
    - ufwrules

- name: UFW - Allow configured networks to communicate
  ansible.builtin.ufw:
    rule: allow
    src: "{{ item }}"
  notify: "Reload ufw"
  loop: "{{ harden_linux_ufw_allow_networks }}"
  loop_control:
    pause: 1
  when: harden_linux_ufw_allow_networks is defined
  tags:
    - ufw

- name: UFW - Setup logging
  ansible.builtin.ufw:
    logging: "{{ harden_linux_ufw_logging }}"
  tags:
    - ufw

- name: UFW - Enable firewall/iptables
  ansible.builtin.ufw:
    state: enabled
  tags:
    - ufw
