---
# Some default settings for deploy user
harden_linux_deploy_user_uid: 9999
harden_linux_deploy_user_shell: "/bin/bash"

# List of files that should be absent on the target host
harden_linux_files_to_delete:
  - "/root/.pw"

# List of packages that should be optionally installed. By default this variable
# is commented out.
# harden_linux_optional_packages:
#   - ...

# NTP package to install. Valid options are:
#
# - openntpd
# - ntp
# - systemd-timesyncd
#
# "openntpd" and "systemd-timesyncd" have the advantage that they don't listen
# on any ports by default. If you just want to keep the hosts clock in sync one
# of those two should do the job. "systemd-timesyncd" is already installed if
# a distribution uses "systemd". So no additional packages are needed.
#
# Having the same time on all your hosts is critical for some services. E.g. for
# certificate validation, for etcd, databases, ... By default "harden_linux_ntp"
# variable is commented so no NTP service will be installed.
#
# harden_linux_ntp: "openntpd"
# harden_linux_ntp: "ntp"
# harden_linux_ntp: "systemd-timesyncd"

# Settings for "openntpd", "ntpd" or "systemd-timesyncd" (see next paragraph).
# For further options see man page: "man 5 ntpd.conf" for "ntp" and "openntpd"
# and "man 5 timesyncd.conf" for "systemd-timesyncd".
#
# The "key" here is a regular expression of a setting you want to replace and the
# value is the setting name + the setting value. E.g. we want to replace the line
# "servers 0.debian.pool.ntp.org" with "servers 1.debian.pool.ntp.org".
# The regex (the key) would be "^servers 0" which means:
#
# "search for a line in the configuration file that begins with 'server 0'
# and replace the whole line with 'servers 1.debian.pool.ntp.org'".
# This way every setting in the configuration file can be replaced by something
# else. Some examples:
#
# harden_linux_ntp_settings:
#   "^servers 0": "servers 0.debian.pool.ntp.org"
#   "^servers 1": "servers 1.debian.pool.ntp.org"
#   "^servers 2": "servers 2.debian.pool.ntp.org"
#   "^servers 3": "servers 3.debian.pool.ntp.org"
#
# Please NOTE: "systemd-timesyncd" comes with reasonable compile time defaults.
# So there is normally no need to change the configuration (not even the NTP
# servers). So the following are just examples but you don't really need to
# specify "harden_linux_ntp_settings" for "systemd-timesyncd".
#
# For "systemd-timesyncd" the configuration file is a little bit different.
# In this case a systemd drop-in for "/etc/systemd/timesyncd.conf" will be
# created at "/etc/systemd/timesyncd.conf.d/".
#
# Example for Debian:
#
# harden_linux_ntp_settings:
#   "^#NTP=": "NTP=0.debian.pool.ntp.org 1.debian.pool.ntp.org 2.debian.pool.ntp.org 3.debian.pool.ntp.org"
#
# For Ubuntu:
#
# harden_linux_ntp_settings:
#   "^#NTP=": "NTP=ntp.ubuntu.com"
#
# For Archlinux:
#
# harden_linux_ntp_settings:
#   "^#NTP=": "NTP=0.arch.pool.ntp.org 1.arch.pool.ntp.org 2.arch.pool.ntp.org 3.arch.pool.ntp.org"

# Most of the following sysctl settings are recommendations from Google which they use
# for their Google Compute Cloud OS images and from UFW firewall. Add more settings
# on your own by adding a group or host variable called "sysctl_settings_user".
# "sysctl_settings" and "sysctl_settings_user" will get merged by a
# task. You can also override a setting defined in "sysctl_settings"
# by specifing a key with the same name and a different value in
# "sysctl_settings_user".
#
# For more information about this settings have a look at:
# https://cloud.google.com/compute/docs/images/building-custom-os
# https://cloud.google.com/compute/docs/images/configuring-imported-images
# With ufw package installed: /etc/ufw/sysctl.conf
#
# The following settings are not available for all kernels so they you need
# to figure out if you want to include them.
#
# "kernel.yama.ptrace_scope": 1                   # Set ptrace protections. See:
                                                  # https://www.kernel.org/doc/Documentation/security/Yama.txt
#
# This would be cool but doesn't work with UFW very well so leave it out:
# "kernel.modules_disabled": 1                    # Disable CAP_SYS_MODULE which allows for loading and unloading of kernel modules.
                                                  # If you set kernel.modules_disabled=1 you're not able to load new netfilter/iptables
                                                  # modules anymore! So "ufw" would fail to start if it is loaded afterwards.
# Add this to "sysctl_settings_user" to turn off ipv6 autoconfiguration:
# "net.ipv6.conf.default.autoconf": 0
# "net.ipv6.conf.all.autoconf": 0

# Add this to "sysctl_settings_user" to enable ipv6 privacy addressing
# "net.ipv6.conf.default.use_tempaddr": 2
# "net.ipv6.conf.all.use_tempaddr": 2
harden_linux_sysctl_settings:
  "net.ipv4.tcp_syncookies": 1                     # Enable syn flood protection
  "net.ipv4.conf.all.accept_source_route": 0       # Ignore source-routed packets
  "net.ipv6.conf.all.accept_source_route": 0       # IPv6 - Ignore ICMP redirects
  "net.ipv4.conf.default.accept_source_route": 0   # Ignore source-routed packets
  "net.ipv6.conf.default.accept_source_route": 0   # IPv6 - Ignore source-routed packets
  "net.ipv4.conf.all.accept_redirects": 0          # Ignore ICMP redirects
  "net.ipv6.conf.all.accept_redirects": 0          # IPv6 - Ignore ICMP redirects
  "net.ipv4.conf.default.accept_redirects": 0      # Ignore ICMP redirects
  "net.ipv6.conf.default.accept_redirects": 0      # IPv6 - Ignore ICMP redirects
  "net.ipv4.conf.all.secure_redirects": 1          # Ignore ICMP redirects from non-GW hosts
  "net.ipv4.conf.default.secure_redirects": 1      # Ignore ICMP redirects from non-GW hosts
  "net.ipv4.ip_forward": 0                         # Do not allow traffic between networks or act as a router
  "net.ipv6.conf.all.forwarding": 0                # IPv6 - Do not allow traffic between networks or act as a router
  "net.ipv4.conf.all.send_redirects": 0            # Don't allow traffic between networks or act as a router
  "net.ipv4.conf.default.send_redirects": 0        # Don't allow traffic between networks or act as a router
  "net.ipv4.conf.all.rp_filter": 1                 # Reverse path filtering - IP spoofing protection
  "net.ipv4.conf.default.rp_filter": 1             # Reverse path filtering - IP spoofing protection
  "net.ipv4.icmp_echo_ignore_broadcasts": 1        # Ignore ICMP broadcasts to avoid participating in Smurf attacks
  "net.ipv4.icmp_ignore_bogus_error_responses": 1  # Ignore bad ICMP errors
  "net.ipv4.icmp_echo_ignore_all": 0               # Ignore bad ICMP errors
  "net.ipv4.conf.all.log_martians": 1              # Log spoofed, source-routed, and redirect packets
  "net.ipv4.conf.default.log_martians": 1          # Log spoofed, source-routed, and redirect packets
  "net.ipv4.tcp_rfc1337": 1                        # Implement RFC 1337 fix
  "kernel.randomize_va_space": 2                   # Randomize addresses of mmap base, heap, stack and VDSO page
  "fs.protected_hardlinks": 1                      # Provide protection from ToCToU races
  "fs.protected_symlinks": 1                       # Provide protection from ToCToU races
  "kernel.kptr_restrict": 1                        # Make locating kernel addresses more difficult
  "kernel.perf_event_paranoid": 2                  # Set perf only available to root

# The "key" here is a regex of a setting you want to replace and the value is
# the setting name + the setting value. E.g. we want to replace the line
# "Port 22" with "Port 22222". The regex (the key) would be "^Port " which
# means "search for a line in "/etc/ssh/sshd_config" that begins with 'Port'
# and replace the whole line with 'Port 22222'". This enables you to replace
# every setting in "sshd_config".
harden_linux_sshd_settings:
  "^PasswordAuthentication": "PasswordAuthentication no"  # Disable password authentication
  "^PermitRootLogin": "PermitRootLogin no"                # Disable SSH root login
  "^PermitTunnel": "PermitTunnel no"                      # Disable tun(4) device forwarding
  "^Port ": "Port 22"                                     # Set SSHd port

# By default only allow SSH inbound traffic.
harden_linux_ufw_rules:
  - rule: "allow"
    to_port: "22"
    protocol: "tcp"

# Defaults for UFW (/etc/default/ufw). Same rules as for
# harden_linux_sshd_settings applies.
harden_linux_ufw_defaults:
  "^IPV6": 'IPV6=yes'
  "^DEFAULT_INPUT_POLICY": 'DEFAULT_INPUT_POLICY="DROP"'
  "^DEFAULT_OUTPUT_POLICY": 'DEFAULT_OUTPUT_POLICY="ACCEPT"'
  "^DEFAULT_FORWARD_POLICY": 'DEFAULT_FORWARD_POLICY="DROP"'
  "^DEFAULT_APPLICATION_POLICY": 'DEFAULT_APPLICATION_POLICY="SKIP"'
  "^MANAGE_BUILTINS": 'MANAGE_BUILTINS=no'
  "^IPT_SYSCTL": 'IPT_SYSCTL=/etc/ufw/sysctl.conf'
  "^IPT_MODULES": 'IPT_MODULES="nf_conntrack_ftp nf_nat_ftp nf_conntrack_netbios_ns"'

# Disable/enable UFW logging
harden_linux_ufw_logging: 'off'

# sshgard whitelist: sshguard blocks IPs for some time if
# to many SSH login attempts fail. Specify IP (ranges) that
# should not be blocked.
harden_linux_sshguard_whitelist:
  - "127.0.0.0/8"
  - "::1/128"

#######################################
# Settings only relevant for Ubuntu
#######################################

# Set to "false" if package cache should not be updated
harden_linux_ubuntu_update_cache: true

# Set package cache valid time
harden_linux_ubuntu_cache_valid_time: 3600

#######################################
# Settings only relevant for Archlinux
#######################################

# Set to "false" if package cache should not be updated
harden_linux_archlinux_update_cache: true
